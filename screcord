#!/bin/bash

declare -r profile="${1:-mk4}"
declare -r output=${OUTPUT:-'DP-3'}
declare -r preferred_camera='C920'

declare -ir thread_queue_size=512
declare -ir fps=30
declare -r  delay=0.4
declare -r  filename_format='%Y-%m-%d-%H-%M-%S'

################################################################################
# Here there be Dragons
################################################################################

declare camera="$(find-camera "$preferred_camera")"
if [[ -z $camera ]]
then
  echo "Preferred camera not found: $preferred_camera"
  exit 1
fi

# Screen geometry
read w h x y < <(
  xrandr | sed -nr "
    /${output} connected/{
      s/.* ([0-9]+)x([0-9]+)\+([0-9]+)\+([0-9]+) .*/\1 \2 \3 \4/p;
      q;
    }
  "
)

echo "Recording output: ${output}"
echo "      Resolution: ${w}x${h}"
echo "        Position: ${x}x${y}"

case "$profile" in
  nut)
    declare -r vcodec='copy'
    declare -r acodec='copy'
    declare -r container='nut'
    ;;

  mp4)
    declare -r vcodec='libx264 -crf 0 -preset ultrafast'
    declare -r acodec='aac'
    declare -r container='mp4'
    ;;

  mk4)
    declare -r vcodec='libx264 -crf 0 -preset ultrafast'
    declare -r acodec='aac'
    declare -r container='mkv'
    ;;

  *)
    echo "Unknown profile: ${profile}" >&2
    exit 2
    ;;
esac

source camera-options.sh

################################################################################
# Here there be Cthulhu
################################################################################

declare -r tqs="-thread_queue_size ${thread_queue_size}"
declare -r fr="-framerate ${fps}"
declare -r its="-itsoffset ${delay}"
declare -r filename="$(date +"$filename_format").${container}"
declare -r screencast_dir="${SCREENCAST_DIR:-$HOME/Screencasts}"
declare -r output_file="${screencast_dir}/${filename}"
declare -r link_file="${screencast_dir}/latest.lnk"

set -x
ffmpeg -y \
  $tqs -f v4l2         $fr   -video_size 1920x1080       -input_format mjpeg -i "$camera" \
  $tqs -f x11grab $its $fr   -video_size "${w}x${h}"                         -i ":0+${x},${y}" \
  $tqs -f pulse   $its -ac 2 -name 'Screencast Recorder' -sample_rate 48000  -i default \
  -map 0:v -map 1:v -map 2:a \
  -codec:v $vcodec \
  -codec:a $acodec \
  -b:a 320k \
  "$output_file"
set +x

echo
echo "==> $output_file"

if [[ -L "$link_file" ]]
then rm "$link_file"
fi

ln -s "$output_file" "$link_file"
